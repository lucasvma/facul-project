{"version":3,"file":"static/webpack/static/development/pages/courses/[slug].js.cebcb6f78b60a6461a9e.hot-update.js","sources":["webpack:///./src/pages/courses/[slug].js"],"sourcesContent":["import fs from 'fs'\nimport matter from 'gray-matter'\nimport hydrate from 'next-mdx-remote/hydrate'\nimport renderToString from 'next-mdx-remote/render-to-string'\nimport dynamic from 'next/dynamic'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport path from 'path'\nimport CustomLink from '../../components/CustomLink'\nimport Layout from '../../components/Layout'\nimport { coursesFilePaths, COURSES_PATH } from '../../utils/mdxUtils'\nimport Header from \"../../components/Header/Header\";\nimport HeaderLinks from \"../../components/Header/HeaderLinks\";\nimport Parallax from \"../../components/Parallax/Parallax\";\nimport GridContainer from \"../../components/Grid/GridContainer\";\nimport GridItem from \"../../components/Grid/GridItem\";\nimport profile from \"../../assets/img/apple-icon.png\";\nimport Footer from \"../../components/Footer/Footer\";\nimport React from \"react\";\n\nimport classNames from \"classnames\";\n\nimport styles from \"src/assets/jss/nextjs-material-kit/pages/components.js\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst components = {\n    a: CustomLink,\n    TestComponent: dynamic(() => import('../../components/TestComponent')),\n    Head,\n}\n\nfunction CourseDescription({ content, frontMatter }) {\n    return (\n        <Layout>\n            <div>\n                <nav>\n                    <Link href=\"/courses\">\n                        <a>Cursos</a>\n                    </Link>\n                </nav>\n            </div>\n            <div className=\"ccourse-header\">\n                <h1>{frontMatter.title}</h1>\n                {frontMatter.description && (\n                    <p className=\"description\">{frontMatter.description}</p>\n                )}\n            </div>\n            <main>{content}</main>\n\n            <style jsx>{`\n        .ccourse-header h1 {\n          margin-bottom: 0;\n        }\n        .ccourse-header {\n          margin-bottom: 2rem;\n        }\n        .description {\n          opacity: 0.6;\n        }\n      `}</style>\n        </Layout>\n    );\n}\n\nconst useStyles = makeStyles(styles);\n\nexport default function CoursePage(props) {\n    const content = hydrate(props.source, { components })\n    const courses = useStyles();\n    const { ...rest } = props;\n    const imageCourses = classNames(\n        courses.imgRaised,\n        courses.imgRoundedCircle,\n        courses.imgFluid\n    );\n    return (\n        <div>\n            <Header\n                color=\"transparent\"\n                brand=\"NextJS Material Kit\"\n                rightLinks={<HeaderLinks />}\n                fixed\n                changeColorOnScroll={{\n                    height: 200,\n                    color: \"white\"\n                }}\n                {...rest}\n            />\n            <Parallax small filter image={require(\"src/assets/img/profile-bg.jpg\")} />\n            <div className={classNames(courses.main, courses.mainRaised)}>\n                <div>\n                    <div className={courses.container}>\n                        <GridContainer justify=\"center\">\n                            <GridItem xs={12} sm={12} md={6}>\n                                <div className={courses.profile}>\n                                    <div className={courses.name}>\n                                        <h2 className={courses.title}>Cursos</h2>\n                                    </div>\n                                </div>\n                            </GridItem>\n                        </GridContainer>\n                        <CourseDescription content={content} frontMatter={props.frontMatter} />\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport const getStaticProps = async ({ params }) => {\n    const coursesFilePaths = path.join(COURSES_PATH, `${params.slug}.mdx`)\n    const source = fs.readFileSync(coursesFilePaths)\n\n    const { content, data } = matter(source)\n\n    const mdxSource = await renderToString(content, {\n        components,\n        // Optionally pass remark/rehype plugins\n        mdxOptions: {\n            remarkPlugins: [],\n            rehypePlugins: [],\n        },\n        scope: data,\n    })\n\n    return {\n        props: {\n            source: mdxSource,\n            frontMatter: data,\n        },\n    }\n}\n\nexport const getStaticPaths = async () => {\n    const paths = coursesFilePaths\n        .map((path) => path.replace(/\\.mdx?$/, ''))\n        .map((slug) => ({ params: { slug } }))\n\n    return {\n        paths,\n        fallback: false,\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AA6BA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AACA;AAGA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}